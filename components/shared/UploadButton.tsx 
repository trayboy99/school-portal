// components/shared/UploadButton.tsx
"use client"
import React, { useEffect, useState } from "react";
import { Button } from "@/components/ui/button";

interface UploadButtonProps {
  deadline: Date;
  type: "exam" | "enotes";
  userRole: "teacher" | "admin";
}

export const UploadButton: React.FC<UploadButtonProps> = ({ deadline, type, userRole }) => {
  const [timeLeft, setTimeLeft] = useState("");

  useEffect(() => {
    const interval = setInterval(() => {
      const now = new Date();
      const diff = deadline.getTime() - now.getTime();

      if (diff <= 0) {
        setTimeLeft("Deadline Passed");
        clearInterval(interval);
        return;
      }

      const days = Math.floor(diff / (1000 * 60 * 60 * 24));
      const hours = Math.floor((diff / (1000 * 60 * 60)) % 24);
      const minutes = Math.floor((diff / (1000 * 60)) % 60);
      setTimeLeft(`${days}d ${hours}h ${minutes}m left`);
    }, 1000);

    return () => clearInterval(interval);
  }, [deadline]);

  const now = new Date();
  const isDeadlinePassed = deadline.getTime() < now.getTime();

  return (
    <div className={`relative ${userRole === "teacher" && isDeadlinePassed ? "opacity-50 pointer-events-none" : ""}`}>
      <Button disabled={userRole === "teacher" && isDeadlinePassed} className="w-full">
        Upload {type === "exam" ? "Exam Questions" : "E-Notes"}
      </Button>
      <div className="mt-1 text-xs text-gray-600">
        {userRole === "teacher" ? timeLeft : null}
      </div>
      {userRole === "teacher" && isDeadlinePassed && (
        <div className="absolute inset-0 bg-white/40 backdrop-blur-sm rounded-md z-10 flex items-center justify-center text-sm text-gray-600">
          Deadline Passed
        </div>
      )}
    </div>
  );
};
